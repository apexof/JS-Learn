-------------------------------------------Конструктор своих событий Event------------------------------------------------
var event = new Event(тип события[, флаги]);
    Тип события – может быть как своим, так и встроенным, к примеру "click".
    Флаги {
        bubbles - всплывыает ли (по умолчанию false)
        cancelable - можно ли отменить (по умолчанию false)
    }
    При создании события браузер автоматически ставит следующие свойства:
        isTrusted: false – означает, что событие сгенерировано скриптом, это свойство изменить невозможно.
        target: null – это свойство ставится автоматически позже при dispatchEvent.
        Другие свойства события, если они нужны, например координаты для события мыши – можно присвоить в объект события позже, например:
            var event = new Event("click", {bubbles: true, cancelable: false});
            event.clientX = 100;
            event.clientY = 100;

-------------------------------------------Конструктор своих событий CustomEvent------------------------------------------------
Аналог 1 конструктора , но у второго аргумента-объекта есть дополнительное свойство detail
  elem.addEventListener("hello", function(event) {
    alert( event.detail.name );
  }, false);

  var event = new CustomEvent("hello", {
    detail: { name: "Вася" }
  });

------------------------------------------ Инициализация созданного события -------------------------------------------
чтобы инициировать событие, запускается elem.dispatchEvent(event).
<button id="elem" onclick="alert('Клик');">Автоклик</button>
<script>
  var event = new Event("click");
  elem.dispatchEvent(event);
</script>


---------------------------------------- Отмена действия по умолчанию -------------------------------------------------
На сгенерированном событии, как и на встроенном браузерном, обработчик может вызвать метод event.preventDefault().
Тогда dispatchEvent возвратит false. Это значит что действия после dispatchEvent продолжать не надо.


---------------------Как отличить реальное нажатие от скриптового? поддерживается IE и Firefox  -------------------------
свойство event.isTrusted - true, если посетитель кликнул сам, и false – если событие инициировал скрипт.


------------------------------------------- Пример ----------------------------------------------

1. Создали событие:
    var myEvent = new Event("hide", {
        cancelable: true
    });
2. повесили обработчик этого события на элемент:
    rabbit.addEventListener('hide', function(e) {
        // обработчик
    });
3. Запуск события
    rabbit.dispatchEvent(myEvent);

-------------------------------------Специфические, конструкторы----------------------------------------------
UIEvent
FocusEvent
MouseEvent
WheelEvent
KeyboardEvent
CompositionEvent
Специфический конструктор позволяет указать стандартные свойства для данного типа события. Это нельзя было бы сделать с обычным конструктором Event:
Полный список свойств по типам событий вы найдёте в спецификации