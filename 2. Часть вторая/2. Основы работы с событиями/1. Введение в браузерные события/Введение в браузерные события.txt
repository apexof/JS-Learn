------------------------------------- Cобытия -----------------------------------------
События мыши:
    click – происходит, когда кликнули на элемент левой кнопкой мыши
    contextmenu – происходит, когда кликнули на элемент правой кнопкой мыши
    mouseover – возникает, когда на элемент наводится мышь
    mousedown и mouseup – когда кнопку мыши нажали или отжали
    mousemove – при движении мыши

События на элементах управления:
    submit – посетитель отправил форму <form>
    focus – посетитель фокусируется на элементе, например нажимает на <input>

Клавиатурные события:
    keydown – когда посетитель нажимает клавишу
    keyup – когда посетитель отпускает клавишу

События документа:
    DOMContentLoaded – когда HTML загружен и обработан, DOM документа полностью построен и доступен.

События CSS:
    transitionend – когда CSS-анимация завершена. В большинстве браузеров оно требует назначения через addEventListener.

------------------------------------- Назначение обработчиков событий -----------------------------------------
1. В html атрбуте on<событие>
    <input value="Нажми меня" onclick="countRabbits()" type="button">
2. Назначение свойства DOM-элемента on<событие>, через JavaScript. Аналог первого способа.
    elem.onclick = sayThanks; или elem.onclick = function (){...};
    назначение второго обработчика перезапишет первый.
    elem.onclick = null - убрать обработчик
3. element.addEventListener(event, handler[, phase]) - современный способ.
    можно вешать много обработчиков, даже вдовесок к уже назначенному через on-событие.
    addEventListener работает всегда, а DOM-свойство – нет
    phase - фаза срабатывания. Всплытие 3 или погружение 1.
4. element.removeEventListener(event, handler[, phase]); - нужно передать те же арг-ы что при назначении. Ф-ция должна быть сохранена в переменной.

--------------------------------------Ньансы назначения через on-событие-----------------------------------------
1. При создании обработчика браузером из атрибута, он автоматически создает функцию из его содержимого.
    <input type="button" id="button" onclick="sayThanks()" />
    Превращается в:
    button.onclick = function() {
      sayThanks(); // содержимое атрибута
    };

3. В атрибут передается ф-ция со скобками onclick="sayThanks()".
    А назначение обработчика на свойство DOM-элемента без скобок
    button.onclick = sayThanks;
4. Не используйте setAttribute. Такой вызов работать не будет:
    document.body.setAttribute('onclick', function() { alert(1) });
5. Регистр DOM-свойства имеет значение. При назначении через DOM нужно использовать свойство onclick, а не ONCLICK.

------------------------------------- Доступ к элементу через this ----------------------------------------------
Внутри обработчика события this ссылается на текущий элемент, то есть на тот, на котором он сработал
<button onclick="alert(this.innerHTML)">Нажми меня</button>