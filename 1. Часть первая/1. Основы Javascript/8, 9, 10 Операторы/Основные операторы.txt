Основные операторы
-2 унарный минус
3-2 бинарный минус (3 и 2 это операнды, то к чему применяется оператор)
-------------------------Плюс--------------------
Бинарный
1. если применить к числам будет сложение чисел
2. к строкам - конкатенация (сложение строк)
3. Если хотя бы один аргумент является строкой, то второй будет также преобразован к строке!
alert( '1' + 2 ); // "12"
Унарный
1. С числом ничего не произойдет
2. Строка превратится в число

Остальные арифметические операторы работают только с числами и всегда приводят аргументы к числу.
alert( 2 - '1' ); // 1
alert( 6 / '2' ); // 3

------------------Присваивание---------------
Все операторы возвращают значение. Вызов x = выражение не является исключением.
Он записывает выражение в x, а затем возвращает его.
Благодаря этому присваивание можно использовать как часть более сложного выражения:
var c = 3 - (a = 1);

-------------------Взятие остатка-------------
Его результат a % b – это остаток от деления a на b.

------------------------Инкремент/декремент: ++, -- ------------------------
++i префикс
i++ постфикс. Сначала вернет, потом увеличит
Применяют только к переменным, не к значениям

--------------------------Сокращённая арифметика с присваиванием---------------------
var n = 2;
n *= 2; // теперь n=4 (работает как n = n * 2)
Так можно сделать для операторов +,-,*,/,% и бинарных <<,>>,>>>,&,|,^.

---------------Оператор запятая---------------------
Запятая позволяет перечислять выражения, разделяя их запятой ','.
Каждое из них – вычисляется и отбрасывается, за исключением последнего, которое возвращается.

----------------------------Приоритеты -------------------
(подробнее https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)
…	…	…
17 Постфиксный инкремент и декремент ++ --
16  Префиксный инкремент и декремент ++ --
15	унарный плюс	+
15	унарный минус	-
14	умножение	*
14	деление	/
13	сложение	+
13	вычитание	-
11  Меньше / больше или равно
3	присваивание	=
…	…	…
