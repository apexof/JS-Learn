------------------------------------Логическое-------------------------------------------
Любой объект в логическом контексте – true, даже если это пустой массив [] или объект {}.
------------------------------------ Строковое-------------------------------------------
Если в объекте присутствует метод toString, который возвращает примитив, то он используется для преобразования.

var user = {
  firstName: 'Василий',
  toString: function() {
    return 'Пользователь ' + this.firstName;
  }
};
alert( user );  // Пользователь Василий
Результатом toString может быть любой примитив, если будет объект то ошибка.

Все объекты, включая встроенные, имеют свои реализации метода toString, например:

alert( [1, 2] ); // toString для массивов выводит список элементов "1,2"
Пустой массив преобразуется [] в ""
Пустой {} в "[object Object]"
alert( new Date ); // toString для дат выводит дату в виде строки
alert( function() {} ); // toString для функции выводит её код
alert( {} ); // "[object Object]"

----------------------------------------Численное преобразование-------------------------------------------
Для численного преобразования объекта используется метод valueOf, а если его нет – то toString:
У большинства встроенных объектов такого valueOf нет, поэтому численное и строковое преобразования для них работают одинаково.
Исключением является объект Date, который поддерживает оба типа преобразований:

alert( new Date() ); // toString: Дата в виде читаемой строки
alert( +new Date() ); // valueOf: кол-во миллисекунд, прошедших с 01.01.1970

Пустой массив преобразуется +[] -> 0
[1,2] - > NaN
Любой {} без toString и valueOf преобразуется в NaN


------------------------------------- Преобразование к примитиву --------------------------------------------
1. {} == true //





