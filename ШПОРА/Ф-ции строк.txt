str.length - длина строки
str.charAt(позиция) или str[0]- получить символ
str.toLowerCase() и str.toUpperCase() - смена регистра
str.split([separator][, limit]) - разбивает строку в массив
    separator - регулярное выражение или строка, по которой делить str
    limit - максимальное количество кусков, на которые может быть разбита строка
string1.concat(string2, string3[, ..., stringN]) - сложение строк
(215).toString(10) - приведение к строке. Можно указать систему счисления.



-------------------------------------------- Регулярки -----------------------------------------------
str.search(regexp) - проверяет есть ли совпадения с регулярным выражением
str.match(regexp)
str.replace(regexp, newSubStr|function) - замена в строке. Вернет новую строку.
    regexp - объект типа RegExp или строка
    newSubStr|function - новая подстрока или функция, которая ее возвращает

-------------------------------------------- Поиск -----------------------------------------------

str.indexOf(подстрока[, начальная_позиция]) - поиск подстроки, вернет позицию.
    вернет -1 если не найдено
    if ( ~str.indexOf(...) ) - если найдено
    Поиск всех вхождений:
        var str = "Ослик Иа-Иа посмотрел на виадук"; // ищем в этой строке
        var target = "Иа"; // цель поиска

        var pos = -1;
        while ((pos = str.indexOf(target, pos + 1)) != -1) {
          alert( pos );
        }

lastIndexOf - ищет не с начала, а с конца строки.

-------------------------------------------- Взять подстроку -----------------------------------------------
substring(start, end) возвращает подстроку с позиции start до, но не включая end.
    Если аргумент end отсутствует, то идет до конца строки.
    Отрицательные аргументы интерпретируются как равные нулю. Слишком большие значения усекаются до длины строки.
    Кроме того, если start > end, то аргументы меняются местами, т.е. возвращается участок строки между start и end.
substr(start [, length]) - возвращает подстроку с позиции start, длинной length
    Если второго аргумента нет – подразумевается «до конца строки».
slice(start [, end]) - Возвращает часть строки от позиции start до, но не включая, позиции end.
    Отрицательные значения отсчитываются от конца строки.
    Без аргументов копирует полностью.

-------------------------------------------- Коды символов в Юникоде -----------------------------------------------
String.fromCharCode(code) - Возвращает символ по коду code
str.charCodeAt(pos) - Возвращает код символа на позиции pos.

-------------------------------------------- Сравнение -----------------------------------------------
str1.localeCompare(str2) - правильное сравнение строк
    возвращает -1 - если str1 < str2,
    1 - если str1 > str2 и
    0 - если они равны.


-------------------------------------- Новые ф-ции ------------------------------------------------------
str.includes(s) – проверяет, включает ли одна строка в себя другую, возвращает true/false.
str.endsWith(s) – возвращает true, если строка str заканчивается подстрокой s.
str.startsWith(s) – возвращает true, если строка str начинается со строки s.
str.repeat(times) – повторяет строку str times раз.

