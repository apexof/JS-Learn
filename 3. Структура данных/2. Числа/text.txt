Значение NaN «прилипчиво». Любая операция с NaN возвращает NaN.
Если значение не равно само себе то оно NaN
if (n !== n) alert( 'n = NaN!' );

Математические операции в JS безопасны
Никакие математические операции в JavaScript не могут привести к ошибке или «обрушить» программу.

В худшем случае результат будет NaN.

Функция isFinite(n) преобразует аргумент к числу и возвращает true, если это не NaN/Infinity/-Infinity:

alert( isFinite(1) ); // true
alert( isFinite(Infinity) ); // false
alert( isFinite(NaN) ); // false

---------------------------Мягкое преобразование: parseInt и parseFloat-----------------
alert(+"12px") // NaN
alert( parseInt('12px') ); // 12
alert( parseFloat('12.3.4') ) // 12.3, ошибка на второй точке

parseInt/parseFloat ри ошибке на первом же символе возвращают NaN.

Функция parseInt также позволяет указать систему счисления, то есть считывать числа, заданные в шестнадцатиричной и других системах счисления:
alert( parseInt('FF', 16) ); // 255

Вызов parseFloat(true/false/null/'') вернёт NaN для этих значений.
Так устроена функция parseFloat: она преобразует аргумент к строке, то есть true/false/null становятся "true"/"false"/"null",
а затем считывает из неё число, при этом пустая строка даёт NaN.

--------------------------------------------------------ЧИТ------------------------------------
Остаток при делении на 1 дает дробную часть!!
-----------------------------------------------------------------------------