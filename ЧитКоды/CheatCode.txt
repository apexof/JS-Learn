// Получить дробную часть числа (неточно) (остаток от деления на 1)
var f = 12.34%1;

// Действительно точная проверка на число, которая не считает числом
// строку из пробелов, логические и специальные значения, а также отсекает Infinity

function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}

// получить дробную частьб числа

function getDecimal(num) {
    var str = "" + num;
    var zeroPos = str.indexOf(".");
    if (zeroPos == -1) return 0;
    str = str.slice(zeroPos);
    return +str;
}
// ~n = -(n+1)
//Просто запомните: '~' читается как «не минус один»
/*if (~str.indexOf("get")) {
    alert( 'совпадение есть!' );
}*/



// проверка на пустоту объекта
function isEmpty(obj) {
    for (var key in obj) {
        return false;
    }
    return true;
}


//Проверка поддерживает ли браузер indexOf
if ([].indexOf) {
    //code}
}

//join склеивает массив в строку
new Array(4).join("ля"); // ляляля. Код для повторения симвоолов

// Функция определения типа данных объекта. Для встроенных. Для своих нужна утиная типизация.
function getClass(obj) {
    return {}.toString.call(obj).slice(8, -1);
}

alert( getClass(new Date) ); // Date
alert( getClass([1, 2, 3]) ); // Array
alert( getClass(function(){}) ); // Function


//---------------------------------------------Отлов ошибки ----------------------------------------------
window.onerror = function(message, url, lineNumber) {
    alert("Поймана ошибка, выпавшая в глобальную область!\n" +
        "Сообщение: " + message + "\n(" + url + ":" + lineNumber + ")");
};
function readData() {
    error(); // ой, что-то не так
}
readData();


// --------------------------------- создаем объект коллекцию без лишниъ св-в-----------------------
var data = Object.create(null);
data.text = "Привет";


// ------------------------------------Перебор только своих св-в---------------------------------
for (var key in rabbit) { if (rabbit.hasOwnProperty(key)) {
    alert( key + " = " + rabbit[key] ); // выводит только "jumps"
}}

// ---------------------------------------Проверка переменной на ----------------------------------------------
person.lalala === undefined; // проверка на undefined. Но явно присвоенный undefined обманет эту проверку
person.lalala == undefined; // проверка на undefined и null. Но явно присвоенный undefined обманет эту проверку
if ("name" in obj) - проверка на наличие св-ва в объекте, явно присвоенный undefined НЕ обманет эту проверку
if(val) // Отсечь 0, "", NaN, null, undefined, false. Может быть ошибка если переменная не определена. См. ниже.
if(window.val){} //  к несуществующему св-ву объекта можно обращаться

